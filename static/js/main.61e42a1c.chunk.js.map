{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","this","length","slice","join","good","setState","includes","filter","selected","className","getGoodsTitle","type","onClick","clear","map","selectHandler","Component","ReactDOM","render","document","getElementById"],"mappings":"4OAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,mDAGlB,WACE,OAAwC,IAApCC,KAAKF,MAAMC,cAAcE,OACpB,oBAG+B,IAApCD,KAAKF,MAAMC,cAAcE,OACrB,GAAN,OAAUD,KAAKF,MAAMC,cAAc,GAAnC,gBAGI,GAAN,OAAUC,KAAKF,MAAMC,cAAcG,MAAM,GAAI,GAAGC,KAAK,MAArD,gBACQH,KAAKF,MAAMC,cAAcG,OAAO,GADxC,mB,2BAIF,SAAcE,GACZ,OAAOJ,KAAKK,UAAS,SAAAP,GAAK,MAAK,CAC7BC,cAAiBD,EAAMC,cAAcO,SAASF,GAA/B,YAEPN,EAAMC,cACTQ,QAAO,SAAAC,GAAQ,OAAKA,IAAaJ,MAHvB,sBACPN,EAAMC,eADC,CACcK,U,mBAMjC,WACE,OAAOJ,KAAKK,SAAS,CAAEN,cAAe,O,oBAGxC,WAAU,IAAD,OACCA,EAAkBC,KAAKF,MAAvBC,cAER,OACE,uBAAMU,UAAU,MAAhB,UACE,yBAAQA,UAAU,cAAlB,UACE,oBAAIA,UAAU,aAAd,SAA4BT,KAAKU,kBAEjC,wBACEC,KAAK,SACLC,QAAS,kBAAM,EAAKC,SACpBJ,UAAU,aAHZ,sBASF,6BACGb,EAAgBkB,KAAI,SAAAV,GAAI,OACvB,qBAEEK,UAAU,OAFZ,UAIGL,EAECL,EAAcO,SAASF,GAWrB,wBACEO,KAAK,SACLC,QAAS,kBAAM,EAAKG,cAAcX,IAClCK,UAAU,sCAHZ,oBATA,wBACEE,KAAK,SACLC,QAAS,kBAAM,EAAKG,cAAcX,IAClCK,UAAU,wCAHZ,sBAPCL,e,GAnDDY,aAoFHnB,ICrGfoB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.61e42a1c.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[],\n};\n\nclass App extends Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  getGoodsTitle() {\n    if (this.state.selectedGoods.length === 0) {\n      return 'No goods selected';\n    }\n\n    if (this.state.selectedGoods.length === 1) {\n      return `${this.state.selectedGoods[0]} is selected`;\n    }\n\n    return `${this.state.selectedGoods.slice(0, -1).join(', ')\n    } and ${this.state.selectedGoods.slice(-1)} are selected`;\n  }\n\n  selectHandler(good: string) {\n    return this.setState(state => ({\n      selectedGoods: (!state.selectedGoods.includes(good))\n        ? [...state.selectedGoods, good]\n        : [...state.selectedGoods\n          .filter(selected => (selected !== good))],\n    }));\n  }\n\n  clear() {\n    return this.setState({ selectedGoods: [] });\n  }\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <main className=\"App\">\n        <header className=\"App__header\">\n          <h1 className=\"App__title\">{this.getGoodsTitle()}</h1>\n\n          <button\n            type=\"button\"\n            onClick={() => this.clear()}\n            className=\"App__clear\"\n          >\n            Clear\n          </button>\n        </header>\n\n        <ul>\n          {goodsFromServer.map(good => (\n            <li\n              key={good}\n              className=\"Good\"\n            >\n              {good}\n\n              {!selectedGoods.includes(good)\n                ? (\n                  <button\n                    type=\"button\"\n                    onClick={() => this.selectHandler(good)}\n                    className=\"Good__button Good__button--unselected\"\n                  >\n                    Select\n                  </button>\n                )\n                : (\n                  <button\n                    type=\"button\"\n                    onClick={() => this.selectHandler(good)}\n                    className=\"Good__button Good__button--selected\"\n                  >\n                    Remove\n                  </button>\n                )}\n            </li>\n\n          ))}\n        </ul>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}